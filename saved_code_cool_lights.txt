double offset(double x, double mag, double period, double offset){
    double temp = mag * sin(period * x + offset);
    if(temp < 0){
        temp = 0;
    }
    return temp;
}     


            double x_value = ((double) x) / WINDOW_SIZE_X;
            double r1 = 255 * offset(x, 1, PI / (WINDOW_SIZE_X * 2), frame_count / 100.0);
            double r2 = 255 * offset(x, 1, PI / (WINDOW_SIZE_X * 4), frame_count / -50.0);
            double g1 = 255 * offset(x, 1, PI / (WINDOW_SIZE_X * 1), frame_count / -30.0);
            double g2 = 255 * offset(x, 1, PI / (WINDOW_SIZE_X * 3), frame_count / 75.0);
            double b1 = 255 * offset(x, 1, PI / (WINDOW_SIZE_X * 2), frame_count / -50.0);
            double b2 = 255 * offset(x, 1, PI / (WINDOW_SIZE_X * 4), frame_count / -200.0);
            double b3 = 255 * offset(x, 1, PI / (WINDOW_SIZE_X * 3), frame_count / 50.0);

                double y_value = ((double) y) / WINDOW_SIZE_Y;
                double tempR = r1 * y_value + r2 * y_value * y_value;
                double tempG = g1 * y_value + g2 + y_value * .2;
                double tempB = b1 * y_value + b2 * y_value * y_value + b3 * .9;
                if(tempR > 255){
                    tempR = 255;
                }
                if(tempG > 255){
                    tempG = 255;
                }
                if(tempB > 255){
                    tempB = 255;
                }
                Uint32 r = (Uint32) tempR;
                Uint32 g = (Uint32) tempG;
                Uint32 b = (Uint32) tempB;